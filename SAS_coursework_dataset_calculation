*The goal of this lab is to generate new data sets based on exiting data sets Using numeric and character functions;

/*1. Create a temporary version of the sashelp.us_data data set. Make the following changes:
  a. Calculate the percent change in population between 1960 and 1970. Subtract the 1960 value from the 1970 value. Multiply by 100. Round the percent change value to two decimal places.
  b. Create a numeric variable that holds the absolute value of the difference between the variables created in #1a and the change_1970 variable in the us_data data set.
  c. Calculate the total number of seat changes between 1910 and 1970.
   The resulting data set should contain 52 observations and 85 variables.*/
title 'Q1 analysis on us_new data set';
data us_new;
set sashelp.us_data;
percent_change=round((population_1970-population_1960)/population_1960*100,.01);
abs_difference=abs(percent_change-change_1970);
total_seats=sum(seat_change_1910,seat_change_1920,seat_change_1930,seat_change_1940,seat_change_1950,seat_change_1960,seat_change_1970);
run;

/*2. Sort the data set created in #1 by descending percent change.*/
title 'Q2 sort us_new data set by percent change';
proc sort data=us_new;
    by descending percent_change;
run;

/*3. Print the data set created in #2.
  a. Print only 15 observations.
  b. Suppress the printing of the observation number.
  c. Print only the state name, division, population 1960 and 1970 values, change_1970 , and the three new variables created in #1. */
title 'Q3 report analysis on us_new data set';
proc print data=us_new(obs=15) noobs;
    var statename division population_1960 population_1970 change_1970 percent_change abs_difference total_seats;
run;

/*4. Create a temporary version of the budget data set in the course folder. Make the following changes:
  a. Use the proper function to calculate the average of the five budget variables. 
  b. Use the proper function to calculate the minimum of the five budget variables.
  c. Use the proper function to calculate the maximum of the five budget variables.
  d. Create a variable constant called multiplier. Assign the value of 1.12.
  The resulting data set should contain 12 observations and 12 variables.*/
title 'Q4 analysis on budget_new data set';
data budget_new;
set course.budget;
average=mean(yr2016,yr2017,yr2018,yr2019,yr2020);
minimum=min(yr2016,yr2017,yr2018,yr2019,yr2020);
maximum=max(yr2016,yr2017,yr2018,yr2019,yr2020);
multiplier=1.12;
run;

/*5. Using PROC MEANS, summarize the data created in step #4.
  a. Suppress the printing of the procedure name.
  b. Generate the statistics within each value of department for the four variables created in #4.
  c. The printed output should include the mean, min, and max statistics.
  d. Suppress the printing of the number of observations column that is automatically generated by PROC MEANS. */
title 'Q5 summary on budget_new data set';
ods noproctitle;
proc means data=budget_new mean min max nonobs;
    var average minimum maximum multiplier;
    class department;

run;
ods proctitle;

/*6. Create a temporary version of the diabetes data set in the course folder. Create two new numeric variables based on the height variable, which is inches. 
  a. One variable should contain the number of feet as an integer.
  b. One variable should contain the remaining inches, after calculating the feet, as an integer. 
  The resulting data set should contain 403 observations and 21 variables.*/
title 'Q6 analysis on diabetes_new data set';
data diabetes_new;
set course.diabetes;
height_feet=int(height/12);
height_remaining=mod(height,12); 
*calculate the remainder after division which is integer;
run;
 
/*7. With PROC SGPLOT, create a vertical bar chart using the data set created in #6.
  a. Use the frame variable as the category variable.
  b. Use the height in feet variable as the response variable.
  c. Request the mean statistic.
  d. Use the appropriate option to make each bar a different color.*/
title 'Q7 bar chart on diabetes_new data set';
PROC SGPLOT data=diabetes_new;
    vbar frame/ response=height_feet stat=mean group=frame;
*group function makes the plots to have different colors on each bar automatically;    
run;

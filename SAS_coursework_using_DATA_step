*The goal of this lab is to use DATA step statement;

/*1. Create a temporary version of the lb data set in the course folder. Make the following changes:
  a. Use a WHERE statement to subset to observations with a visit value of Week 32.
  b. Change the value of the lab category value so that only the first letter is capitalized. HINT: There is a function that will do this for you.
  c. Use a LENGTH statement to set the length of a new character variable to 100.
  d. In an assignment statement, use the CATX function to assign values to the new character variable. The values will be the combination of the lab category and lab test values. The category value should be followed by a colon and a space. 
  e. Keep only the subject id, visit, lab result, and the new character variable.
  The resulting data set should contain 1806 observations and 4 variables.*/
title 'Q1 data analysis on lb data set';
data lb_new;
    set course.LB;
    length lab $100;
    where visit='Week 32';
    lbcat=upcase(lbcat);

    lab=catx(': ',lbcat,lbtest);
    keep usubjid visit lbstresn lab;
run;


/*2. Run a PROC CONTENTS step on the data set created in #1.
a. Exclude the engine/host information.*/
title'Q2 data analysis on lb_new data set';
PROC CONTENTS data=lb_new ;
ods exclude enginehost;
run;

/*3. Create a temporary version of the learn_modalities data set in the course folder. Make the following changes:
  a. On the SET statement use the KEEP= data set option to keep only the district name, operational schools number, and student count variables.
  b. Create a new numeric variable that is the average number of students per operational school.
  c. Use a subsetting IF statement to subset to observations with the new variable greater than 2000.
  d. Apply a label to the new variable. 
  e. Drop the operational schools number and student count variables using a DROP statement. The resulting data set should contain 591 observations and 2 variables.*/
title 'Q3 data analysis on learn_modalities data set';
data learnmo;
    set course.learn_modalities(keep=district_name operational_schools student_count);
    ave_stu=student_count/operational_schools;
    if ave_stu>2000;
    label ave_stu='the average number of students per operational school';
    drop operational_schools student_count;
   
run;


/*4. Run a PROC SORT step on the data set created in #3.
  a. Sort by descending average number of students, then district name.
  b. Remove duplicates.*/
title 'Q4 data analysis on learnmo data set';
proc sort data=learnmo nodupkey out=learnmo2;
    by descending ave_stu district_name;
run;


/*5. Run a PROC PRINT on the data set created in #4.
  a. Display the labels.
  b. Print only 25 observations.*/
title 'Q5 data analysis on learnmo2 data set';
proc print data=learnmo2(obs=25) label;
run;
 

/*6. Create a temporary version of the employee_donations data set in the course data set. Make the following changes:
  a. Use a function to create a new variable containing the year’s total donation amount for each employee. 
  b. Apply a label to the new variable. 
 The resulting data set should contain 124 observations and 8 variables.*/
title 'Q6 data analysis on employee_donations data set';
data em_new;
    set course.employee_donations;
    yr=sum(of qtr1-qtr4);
    label yr='the year’s total donation amount for each employee';
    
run;


/*7. Using PROC MEANS, summarize the data created in step #6.
  a. Suppress the printing of the procedure name.
  b. The printed output should include the n and mean statistics.
  c. Suppress the printing of the number of observations column that is automatically generated by PROC MEANS. 
  d. Generate the statistics within each value of the paid by value.
  e. Use the total variable calculated in #5a as the analysis variable. */
title 'Q7 data analysis on em_new data set';
ods noproctitle;
proc means data=em_new n mean nonobs;
    class paid_by;
    var yr;
run;

ods proctitle;

/*8. Run a PROC FREQ on the sashelp.heart data set.
  a. Use the RENAME= data set option to change the name of chol_status to chol and bp_status to bp.
  b. Request the combination of cholesterol status and blood pressure status.*/
title 'Q8 data analysis on heart data set';
proc freq data=sashelp.heart(rename=(chol_status=chol bp_status=bp));
    tables chol*bp;
run;
